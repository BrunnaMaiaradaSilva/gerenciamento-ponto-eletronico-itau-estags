{"version":3,"sources":["./src/app/services/request.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA2C;AACO;AACF;AAKhD;IACI,wBAAoB,IAAgB,EAAU,OAA0B;QAApD,SAAI,GAAJ,IAAI,CAAY;QAAU,YAAO,GAAP,OAAO,CAAmB;QAExE,QAAG,GAAW,yCAAyC,CAAC;IAFoB,CAAC;IAIvE,6BAAI,GAAV,UAAW,IAAmB,EAAE,MAAsB,EAAE,IAAW,EAAE,OAAc,EAAE,MAAa;QAAvF,kCAAmB;QAAE,uCAAsB;QAAE,kCAAW;QAAE,wCAAc;QAAE,sCAAa;;;;;;;wBAC1F,QAAQ,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wBAC9C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;wBACpB,qBAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gCACnD,IAAI;gCACJ,MAAM;gCACN,OAAO;gCACP,cAAc,EAAE,IAAI;gCACpB,eAAe,EAAE,IAAI;gCACrB,YAAY,EAAE,IAAI;6BACrB,CAAC,CAAC,SAAS,EAAE;iCACT,IAAI,CAAC,gBAAM,IAAI,aAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,UAAE,CAAC,EAAjD,CAAiD,CAAC;iCACjE,KAAK,CAAC,gBAAM,IAAI,aAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,UAAE,CAAC,EAAhD,CAAgD,CAAC;iCACjE,OAAO,CAAC,cAAM,YAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAnB,CAAmB,CAAC;;wBAVvC,SAUuC,CAAC;wBACxC,sBAAO,QAAQ,EAAC;;;;KACnB;;gBAnByB,+DAAU;gBAAmB,6DAAiB;;IAD/D,cAAc;QAH1B,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;yCAE4B,+DAAU,EAAmB,6DAAiB;OAD/D,cAAc,CAqB1B;IAAD,qBAAC;CAAA;AArB0B","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RequestService {\n    constructor(private http: HttpClient, private spinner: NgxSpinnerService) { }\n\n    url: String = 'https://calm-oasis-34853.herokuapp.com/';\n\n    async send(path: string = null, method: string = 'GET', body = null, headers = null, params = null) {\n        let response = { error: false, result: null };\n        this.spinner.show();\n        await this.http.request(method, this.url.concat(path), {\n            body,\n            params,\n            headers,\n            reportProgress: null,\n            withCredentials: null,\n            responseType: null,\n        }).toPromise()\n            .then(result => Object.assign(response, { error: false, result }))\n            .catch(result => Object.assign(response, { error: true, result }))\n            .finally(() => this.spinner.hide());\n        return response;\n    }\n}"],"sourceRoot":"webpack:///"}