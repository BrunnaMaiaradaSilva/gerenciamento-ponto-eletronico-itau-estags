{"version":3,"sources":["./node_modules/ngx-clipboard/__ivy_ngcc__/fesm5/ngx-clipboard.js","./node_modules/ngx-window-token/__ivy_ngcc__/fesm5/ngx-window-token.js","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/user-profile/user-profile.component.html","./src/app/layouts/admin-layout/admin-layout.module.ts","./src/app/layouts/admin-layout/admin-layout.routing.ts","./src/app/pages/dashboard/dashboard.component.scss","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/user-profile/user-profile.component.scss","./src/app/pages/user-profile/user-profile.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACa;AACiI;AAChJ;AACX;;AAE/B;AACA;AACA;AACwC;AACxC;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qCAAqC;AAC/E;AACA;AACA;AACA,0CAA0C,0CAA0C;AACpF;AACA,sCAAsC,qCAAqC;AAC3E;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,SAAS,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC9E,SAAS,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,uDAAM,IAAI;AAC7F,MAAM;AACN,6BAA6B,wEAAkB,EAAE,+CAA+C,6BAA6B,8DAAQ,CAAC,wDAAQ,GAAG,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","file":"layouts-admin-layout-admin-layout-module.js","sourcesContent":["import { __decorate, __param } from 'tslib';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Inject, Optional, ɵɵdefineInjectable, ɵɵinject, Injectable, EventEmitter, Input, Output, HostListener, Directive, ViewContainerRef, TemplateRef, NgModule } from '@angular/core';\nimport { WINDOW } from 'ngx-window-token';\nimport { Subject } from 'rxjs';\n\n/**\r\n * The following code is heavily copied from https://github.com/zenorocha/clipboard.js\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nvar ClipboardService = /** @class */ (function () {\r\n    function ClipboardService(document, window) {\r\n        this.document = document;\r\n        this.window = window;\r\n        this.copySubject = new Subject();\r\n        this.copyResponse$ = this.copySubject.asObservable();\r\n        this.config = {};\r\n    }\r\n    ClipboardService.prototype.configure = function (config) {\r\n        this.config = config;\r\n    };\r\n    ClipboardService.prototype.copy = function (content) {\r\n        if (!this.isSupported || !content) {\r\n            return this.pushCopyResponse({ isSuccess: false, content: content });\r\n        }\r\n        var copyResult = this.copyFromContent(content);\r\n        if (copyResult) {\r\n            return this.pushCopyResponse({ content: content, isSuccess: copyResult });\r\n        }\r\n        return this.pushCopyResponse({ isSuccess: false, content: content });\r\n    };\r\n    Object.defineProperty(ClipboardService.prototype, \"isSupported\", {\r\n        get: function () {\r\n            return !!this.document.queryCommandSupported && !!this.document.queryCommandSupported('copy') && !!this.window;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClipboardService.prototype.isTargetValid = function (element) {\r\n        if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\r\n            if (element.hasAttribute('disabled')) {\r\n                throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\r\n            }\r\n            return true;\r\n        }\r\n        throw new Error('Target should be input or textarea');\r\n    };\r\n    /**\r\n     * Attempts to copy from an input `targetElm`\r\n     */\r\n    ClipboardService.prototype.copyFromInputElement = function (targetElm, isFocus) {\r\n        if (isFocus === void 0) { isFocus = true; }\r\n        try {\r\n            this.selectTarget(targetElm);\r\n            var re = this.copyText();\r\n            this.clearSelection(isFocus ? targetElm : undefined, this.window);\r\n            return re && this.isCopySuccessInIE11();\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * This is a hack for IE11 to return `true` even if copy fails.\r\n     */\r\n    ClipboardService.prototype.isCopySuccessInIE11 = function () {\r\n        var clipboardData = this.window['clipboardData'];\r\n        if (clipboardData && clipboardData.getData) {\r\n            if (!clipboardData.getData('Text')) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Creates a fake textarea element, sets its value from `text` property,\r\n     * and makes a selection on it.\r\n     */\r\n    ClipboardService.prototype.copyFromContent = function (content, container) {\r\n        if (container === void 0) { container = this.document.body; }\r\n        // check if the temp textarea still belongs to the current container.\r\n        // In case we have multiple places using ngx-clipboard, one is in a modal using container but the other one is not.\r\n        if (this.tempTextArea && !container.contains(this.tempTextArea)) {\r\n            this.destroy(this.tempTextArea.parentElement);\r\n        }\r\n        if (!this.tempTextArea) {\r\n            this.tempTextArea = this.createTempTextArea(this.document, this.window);\r\n            try {\r\n                container.appendChild(this.tempTextArea);\r\n            }\r\n            catch (error) {\r\n                throw new Error('Container should be a Dom element');\r\n            }\r\n        }\r\n        this.tempTextArea.value = content;\r\n        var toReturn = this.copyFromInputElement(this.tempTextArea, false);\r\n        if (this.config.cleanUpAfterCopy) {\r\n            this.destroy(this.tempTextArea.parentElement);\r\n        }\r\n        return toReturn;\r\n    };\r\n    /**\r\n     * Remove temporary textarea if any exists.\r\n     */\r\n    ClipboardService.prototype.destroy = function (container) {\r\n        if (container === void 0) { container = this.document.body; }\r\n        if (this.tempTextArea) {\r\n            container.removeChild(this.tempTextArea);\r\n            // removeChild doesn't remove the reference from memory\r\n            this.tempTextArea = undefined;\r\n        }\r\n    };\r\n    /**\r\n     * Select the target html input element.\r\n     */\r\n    ClipboardService.prototype.selectTarget = function (inputElement) {\r\n        inputElement.select();\r\n        inputElement.setSelectionRange(0, inputElement.value.length);\r\n        return inputElement.value.length;\r\n    };\r\n    ClipboardService.prototype.copyText = function () {\r\n        return this.document.execCommand('copy');\r\n    };\r\n    /**\r\n     * Moves focus away from `target` and back to the trigger, removes current selection.\r\n     */\r\n    ClipboardService.prototype.clearSelection = function (inputElement, window) {\r\n        inputElement && inputElement.focus();\r\n        window.getSelection().removeAllRanges();\r\n    };\r\n    /**\r\n     * Creates a fake textarea for copy command.\r\n     */\r\n    ClipboardService.prototype.createTempTextArea = function (doc, window) {\r\n        var isRTL = doc.documentElement.getAttribute('dir') === 'rtl';\r\n        var ta;\r\n        ta = doc.createElement('textarea');\r\n        // Prevent zooming on iOS\r\n        ta.style.fontSize = '12pt';\r\n        // Reset box model\r\n        ta.style.border = '0';\r\n        ta.style.padding = '0';\r\n        ta.style.margin = '0';\r\n        // Move element out of screen horizontally\r\n        ta.style.position = 'absolute';\r\n        ta.style[isRTL ? 'right' : 'left'] = '-9999px';\r\n        // Move element to the same position vertically\r\n        var yPosition = window.pageYOffset || doc.documentElement.scrollTop;\r\n        ta.style.top = yPosition + 'px';\r\n        ta.setAttribute('readonly', '');\r\n        return ta;\r\n    };\r\n    /**\r\n     * Pushes copy operation response to copySubject, to provide global access\r\n     * to the response.\r\n     */\r\n    ClipboardService.prototype.pushCopyResponse = function (response) {\r\n        this.copySubject.next(response);\r\n    };\r\n    /**\r\n     * @deprecated use pushCopyResponse instead.\r\n     */\r\n    ClipboardService.prototype.pushCopyReponse = function (response) {\r\n        this.pushCopyResponse(response);\r\n    };\r\n    ClipboardService.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\r\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [WINDOW,] }] }\r\n    ]; };\r\n    ClipboardService.ɵprov = ɵɵdefineInjectable({ factory: function ClipboardService_Factory() { return new ClipboardService(ɵɵinject(DOCUMENT), ɵɵinject(WINDOW, 8)); }, token: ClipboardService, providedIn: \"root\" });\r\n    ClipboardService = __decorate([ __param(0, Inject(DOCUMENT)), __param(1, Optional()), __param(1, Inject(WINDOW))\r\n    ], ClipboardService);\nClipboardService.ɵfac = function ClipboardService_Factory(t) { return new (t || ClipboardService)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(WINDOW, 8)); };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClipboardService, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [WINDOW]\n            }] }]; }, null); })();\r\n    return ClipboardService;\r\n}());\n\nvar ClipboardDirective = /** @class */ (function () {\r\n    function ClipboardDirective(clipboardSrv) {\r\n        this.clipboardSrv = clipboardSrv;\r\n        this.cbOnSuccess = new EventEmitter();\r\n        this.cbOnError = new EventEmitter();\r\n    }\r\n    // tslint:disable-next-line:no-empty\r\n    ClipboardDirective.prototype.ngOnInit = function () { };\r\n    ClipboardDirective.prototype.ngOnDestroy = function () {\r\n        this.clipboardSrv.destroy(this.container);\r\n    };\r\n    ClipboardDirective.prototype.onClick = function (event) {\r\n        if (!this.clipboardSrv.isSupported) {\r\n            this.handleResult(false, undefined, event);\r\n        }\r\n        else if (this.targetElm && this.clipboardSrv.isTargetValid(this.targetElm)) {\r\n            this.handleResult(this.clipboardSrv.copyFromInputElement(this.targetElm), this.targetElm.value, event);\r\n        }\r\n        else if (this.cbContent) {\r\n            this.handleResult(this.clipboardSrv.copyFromContent(this.cbContent, this.container), this.cbContent, event);\r\n        }\r\n    };\r\n    /**\r\n     * Fires an event based on the copy operation result.\r\n     * @param succeeded\r\n     */\r\n    ClipboardDirective.prototype.handleResult = function (succeeded, copiedContent, event) {\r\n        var response = {\r\n            isSuccess: succeeded,\r\n            event: event\r\n        };\r\n        if (succeeded) {\r\n            response = Object.assign(response, {\r\n                content: copiedContent,\r\n                successMessage: this.cbSuccessMsg\r\n            });\r\n            this.cbOnSuccess.emit(response);\r\n        }\r\n        else {\r\n            this.cbOnError.emit(response);\r\n        }\r\n        this.clipboardSrv.pushCopyResponse(response);\r\n    };\r\n    ClipboardDirective.ctorParameters = function () { return [\r\n        { type: ClipboardService }\r\n    ]; };\r\n    __decorate([\r\n        Input('ngxClipboard')\r\n    ], ClipboardDirective.prototype, \"targetElm\", void 0);\r\n    __decorate([\r\n        Input()\r\n    ], ClipboardDirective.prototype, \"container\", void 0);\r\n    __decorate([\r\n        Input()\r\n    ], ClipboardDirective.prototype, \"cbContent\", void 0);\r\n    __decorate([\r\n        Input()\r\n    ], ClipboardDirective.prototype, \"cbSuccessMsg\", void 0);\r\n    __decorate([\r\n        Output()\r\n    ], ClipboardDirective.prototype, \"cbOnSuccess\", void 0);\r\n    __decorate([\r\n        Output()\r\n    ], ClipboardDirective.prototype, \"cbOnError\", void 0);\r\n    __decorate([\r\n        HostListener('click', ['$event.target'])\r\n    ], ClipboardDirective.prototype, \"onClick\", null);\nClipboardDirective.ɵfac = function ClipboardDirective_Factory(t) { return new (t || ClipboardDirective)(ɵngcc0.ɵɵdirectiveInject(ClipboardService)); };\nClipboardDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ClipboardDirective, selectors: [[\"\", \"ngxClipboard\", \"\"]], hostBindings: function ClipboardDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function ClipboardDirective_click_HostBindingHandler($event) { return ctx.onClick($event.target); });\n    } }, inputs: { targetElm: [\"ngxClipboard\", \"targetElm\"], container: \"container\", cbContent: \"cbContent\", cbSuccessMsg: \"cbSuccessMsg\" }, outputs: { cbOnSuccess: \"cbOnSuccess\", cbOnError: \"cbOnError\" } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClipboardDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngxClipboard]'\n            }]\n    }], function () { return [{ type: ClipboardService }]; }, { cbOnSuccess: [{\n            type: Output\n        }], cbOnError: [{\n            type: Output\n        }], onClick: [{\n            type: HostListener,\n            args: ['click', ['$event.target']]\n        }], targetElm: [{\n            type: Input,\n            args: ['ngxClipboard']\n        }], container: [{\n            type: Input\n        }], cbContent: [{\n            type: Input\n        }], cbSuccessMsg: [{\n            type: Input\n        }] }); })();\r\n    return ClipboardDirective;\r\n}());\n\nvar ClipboardIfSupportedDirective = /** @class */ (function () {\r\n    function ClipboardIfSupportedDirective(_clipboardService, _viewContainerRef, _templateRef) {\r\n        this._clipboardService = _clipboardService;\r\n        this._viewContainerRef = _viewContainerRef;\r\n        this._templateRef = _templateRef;\r\n    }\r\n    ClipboardIfSupportedDirective.prototype.ngOnInit = function () {\r\n        if (this._clipboardService.isSupported) {\r\n            this._viewContainerRef.createEmbeddedView(this._templateRef);\r\n        }\r\n    };\r\n    ClipboardIfSupportedDirective.ctorParameters = function () { return [\r\n        { type: ClipboardService },\r\n        { type: ViewContainerRef },\r\n        { type: TemplateRef }\r\n    ]; };\nClipboardIfSupportedDirective.ɵfac = function ClipboardIfSupportedDirective_Factory(t) { return new (t || ClipboardIfSupportedDirective)(ɵngcc0.ɵɵdirectiveInject(ClipboardService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nClipboardIfSupportedDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ClipboardIfSupportedDirective, selectors: [[\"\", \"ngxClipboardIfSupported\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClipboardIfSupportedDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngxClipboardIfSupported]'\n            }]\n    }], function () { return [{ type: ClipboardService }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }]; }, null); })();\r\n    return ClipboardIfSupportedDirective;\r\n}());\n\nvar ClipboardModule = /** @class */ (function () {\r\n    function ClipboardModule() {\r\n    }\nClipboardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ClipboardModule });\nClipboardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ClipboardModule_Factory(t) { return new (t || ClipboardModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClipboardModule, { declarations: function () { return [ClipboardDirective,\n        ClipboardIfSupportedDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ClipboardDirective,\n        ClipboardIfSupportedDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClipboardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [ClipboardDirective, ClipboardIfSupportedDirective],\n                exports: [ClipboardDirective, ClipboardIfSupportedDirective]\n            }]\n    }], function () { return []; }, null); })();\r\n    return ClipboardModule;\r\n}());\n\n/*\r\n * Public API Surface of ngx-clipboard\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ClipboardDirective, ClipboardIfSupportedDirective, ClipboardModule, ClipboardService };\n\n//# sourceMappingURL=ngx-clipboard.js.map","import { InjectionToken } from '@angular/core';\n\nvar WINDOW = new InjectionToken('WindowToken', typeof window !== 'undefined' && window.document ? { providedIn: 'root', factory: function () { return window; } } : undefined);\n\n/*\r\n * Public API Surface of ngx-window-token\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { WINDOW };\n\n//# sourceMappingURL=ngx-window-token.js.map","export default \"<div class=\\\"header bg-gradient-danger pb-8 pt-5 pt-md-8\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"header-body\\\">\\n      <!-- Card stats -->\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-3 col-lg-6\\\">\\n          <div class=\\\"card card-stats mb-4 mb-xl-0\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                  <h5 class=\\\"card-title text-uppercase text-muted mb-0\\\">Entrada</h5>\\n                  <span class=\\\"h2 font-weight-bold mb-0\\\">350,897</span>\\n                </div>\\n                <div class=\\\"col-auto\\\">\\n                  <div class=\\\"icon icon-shape bg-danger text-white rounded-circle shadow\\\">\\n                    <i class=\\\"fas fa-chart-bar\\\"></i>\\n                  </div>\\n                </div>\\n              </div>\\n              <p class=\\\"mt-3 mb-0 text-muted text-sm\\\">\\n                <span class=\\\"text-success mr-2\\\"><i class=\\\"fa fa-arrow-up\\\"></i> 3.48%</span>\\n                <span class=\\\"text-nowrap\\\">Since last month</span>\\n              </p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-xl-3 col-lg-6\\\">\\n          <div class=\\\"card card-stats mb-4 mb-xl-0\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                  <h5 class=\\\"card-title text-uppercase text-muted mb-0\\\">SAÍDA</h5>\\n                  <span class=\\\"h2 font-weight-bold mb-0\\\">2,356</span>\\n                </div>\\n                <div class=\\\"col-auto\\\">\\n                  <div class=\\\"icon icon-shape bg-warning text-white rounded-circle shadow\\\">\\n                    <i class=\\\"fas fa-chart-pie\\\"></i>\\n                  </div>\\n                </div>\\n              </div>\\n              <p class=\\\"mt-3 mb-0 text-muted text-sm\\\">\\n                <span class=\\\"text-danger mr-2\\\"><i class=\\\"fas fa-arrow-down\\\"></i> 3.48%</span>\\n                <span class=\\\"text-nowrap\\\">Since last week</span>\\n              </p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-xl-3 col-lg-6\\\">\\n          <div class=\\\"card card-stats mb-4 mb-xl-0\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                  <h5 class=\\\"card-title text-uppercase text-muted mb-0\\\">ENTRADA</h5>\\n                  <span class=\\\"h2 font-weight-bold mb-0\\\">924</span>\\n                </div>\\n                <div class=\\\"col-auto\\\">\\n                  <div class=\\\"icon icon-shape bg-yellow text-white rounded-circle shadow\\\">\\n                    <i class=\\\"fas fa-users\\\"></i>\\n                  </div>\\n                </div>\\n              </div>\\n              <p class=\\\"mt-3 mb-0 text-muted text-sm\\\">\\n                <span class=\\\"text-warning mr-2\\\"><i class=\\\"fas fa-arrow-down\\\"></i> 1.10%</span>\\n                <span class=\\\"text-nowrap\\\">Since yesterday</span>\\n              </p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-xl-3 col-lg-6\\\">\\n          <div class=\\\"card card-stats mb-4 mb-xl-0\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                  <h5 class=\\\"card-title text-uppercase text-muted mb-0\\\">SAÍDA</h5>\\n                  <span class=\\\"h2 font-weight-bold mb-0\\\">49,65%</span>\\n                </div>\\n                <div class=\\\"col-auto\\\">\\n                  <div class=\\\"icon icon-shape bg-info text-white rounded-circle shadow\\\">\\n                    <i class=\\\"fas fa-percent\\\"></i>\\n                  </div>\\n                </div>\\n              </div>\\n              <p class=\\\"mt-3 mb-0 text-muted text-sm\\\">\\n                <span class=\\\"text-success mr-2\\\"><i class=\\\"fas fa-arrow-up\\\"></i> 12%</span>\\n                <span class=\\\"text-nowrap\\\">Since last month</span>\\n              </p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"container-fluid mt--7\\\">\\n\\n  <div class=\\\"row mt  -5\\\">\\n    <div class=\\\"col-xl-12 mb-5 mb-xl-0\\\">\\n      <div class=\\\"card shadow\\\">\\n        <div class=\\\"card-header border-0\\\">\\n          <div class=\\\"row align-items-center\\\">\\n            <div class=\\\"col\\\">\\n              <h3 class=\\\"mb-0\\\">Usuários</h3>\\n            </div>\\n            <!-- <div class=\\\"col text-right\\\">\\n              <input type=\\\"text\\\" id=\\\"input-username\\\" class=\\\"form-control form-control-alternative\\\" placeholder=\\\"Username\\\" value=\\\"lucky.jesse\\\">\\n            </div> -->\\n          </div>\\n        </div>\\n        <div class=\\\"table-responsive\\\">\\n          <!-- Projects table -->\\n          <table class=\\\"table align-items-center table-flush\\\">\\n            <thead class=\\\"thead-light\\\">\\n              <tr>\\n                <th scope=\\\"col\\\">Nome</th>\\n                <th scope=\\\"col\\\">E-mail</th>\\n                <th scope=\\\"col\\\">CPF</th>\\n                <th scope=\\\"col\\\">Ações</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let item of data\\\">\\n                <th scope=\\\"row\\\">\\n                  {{item.nome}}\\n                </th>\\n                <td>\\n                  {{item.email}}\\n                </td>\\n                <td>\\n                  {{item.cpf}}\\n                </td>\\n                <td>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" [routerLink]=\\\"['/usuario', item.id]\\\"><i class=\\\"fas fa-eye text-white\\\"></i></button>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\"><i class=\\\"fas fa-trash text-white\\\"></i></button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","export default \"<div  *ngIf=\\\"data\\\" class=\\\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\\\" style=\\\"min-height: 600px; background-image: url(assets/img/theme/profile-cover.jpg); background-size: cover; background-position: center top;\\\">\\n  <!-- Mask -->\\n  <span class=\\\"mask bg-gradient-danger opacity-8\\\"></span>\\n  <!-- Header container -->\\n  <div class=\\\"container-fluid d-flex align-items-center\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-7 col-md-10\\\">\\n        <h1 class=\\\"display-2 text-white\\\">{{data.usuario.nome}}</h1>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"container-fluid mt--7\\\" *ngIf=\\\"data\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12 order-xl-1\\\">\\n      <div class=\\\"card bg-secondary shadow\\\">\\n        <div class=\\\"card-header bg-white border-0\\\">\\n          <div class=\\\"row align-items-center\\\">\\n            <div class=\\\"col-8\\\">\\n              <h3 class=\\\"mb-0\\\">Informações</h3>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form>\\n            <h6 class=\\\"heading-small text-muted mb-4\\\">Usuário</h6>\\n            <div class=\\\"pl-lg-4\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\" for=\\\"input-username\\\">Nome</label>\\n                    <input type=\\\"text\\\" id=\\\"input-username\\\" class=\\\"form-control form-control-alternative\\\" placeholder=\\\"Username\\\" value=\\\"{{data.usuario.nome}}\\\">\\n                  </div>\\n                </div>\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\" for=\\\"input-email\\\">Email</label>\\n                    <input type=\\\"email\\\" id=\\\"input-email\\\" class=\\\"form-control form-control-alternative\\\" value=\\\"{{data.usuario.email}}\\\">\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\" for=\\\"input-first-name\\\">CPF</label>\\n                    <input type=\\\"text\\\" id=\\\"input-first-name\\\" class=\\\"form-control form-control-alternative\\\" value=\\\"{{data.usuario.cpf}}\\\">\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <hr class=\\\"my-4\\\" />\\n            <!-- Address -->\\n            <h6 class=\\\"heading-small text-muted mb-4\\\">Ponto eletrônico</h6>\\n            <div class=\\\"table-responsive\\\">\\n              <!-- Projects table -->\\n              <table class=\\\"table align-items-center table-flush\\\">\\n                <thead class=\\\"thead-light\\\">\\n                  <tr>\\n                    <th scope=\\\"col\\\">Tipo</th>\\n                    <th scope=\\\"col\\\">Horário</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let item of data.ponto\\\">\\n                    <th scope=\\\"row\\\">\\n                      {{item.tipo}}\\n                    </th>\\n                    <td>\\n                      {{item.data | date:\\\"dd/MM/yyyy HH:mm\\\"}}\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';import { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from 'ngx-clipboard';\n\nimport { AdminLayoutRoutes } from './admin-layout.routing';\nimport { DashboardComponent } from '../../pages/dashboard/dashboard.component';\nimport { UserProfileComponent } from '../../pages/user-profile/user-profile.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n// import { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AdminLayoutRoutes),\n    FormsModule,\n    HttpClientModule,\n    NgbModule,\n    ClipboardModule\n  ],\n  declarations: [\n    DashboardComponent,\n    UserProfileComponent,\n  ]\n})\n\nexport class AdminLayoutModule {}\n","import { Routes } from '@angular/router';\n\nimport { DashboardComponent } from '../../pages/dashboard/dashboard.component';\nimport { UserProfileComponent } from '../../pages/user-profile/user-profile.component';\n\nexport const AdminLayoutRoutes: Routes = [\n    { path: 'dashboard',      component: DashboardComponent },\n    { path: 'usuario/:id',   component: UserProfileComponent },\n\n];\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { RequestService } from 'src/app/services/request';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  constructor(private requestService: RequestService) { }\n\n  data: any;\n\n  ngOnInit() {\n    this.getData();\n  }\n\n  async getData(){\n    const response = await this.requestService.send('usuario');\n    this.data = response.result;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RequestService } from 'src/app/services/request';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n\n  constructor(private activeRoute: ActivatedRoute, private requestService: RequestService) { }\n  \n  data: any;\n\n  ngOnInit() {\n    this.getId();\n  }\n\n  getId() {\n    this.activeRoute.params.subscribe(params => {\n      if (params['id']) {\n        this.getData(params['id']);\n      }\n    })\n  }\n\n  async getData(id){\n    let url = 'usuario/'.concat(id);\n    this.data = {\n      usuario: await (await this.requestService.send(url)).result,\n      ponto: await (await this.requestService.send(url.concat('/ponto'))).result\n    }\n  }\n\n}\n"],"sourceRoot":"webpack:///"}